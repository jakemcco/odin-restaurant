(()=>{"use strict";const e=function(e){const t=document.createElement("p");return t.textContent=e,t.style.fontStyle="italic",t},t=function(){const t=document.getElementById("main");t.textContent="",t.appendChild(function(){const t=document.createElement("div");return t.classList.add("home"),t.append(e('"The real deal. No-nonsense ramen." -- RamenDojo99'),e('"Best ramen on the block!" -- Anonymous'),e('"The world\'s best ramen, trust me." -- Shady Ramen Reviewer')),t}())};class n{constructor(e="Unknown Dish",t="./images/nongshim-shin-ramyun.jpg",n="Ingredients"){this.name=e,this.image=t,this.ingredients=n}clone(){const e=new n;return e.name=this.name,e.image=this.image,e.ingredients=this.ingredients,e}}const s=[new n("Nongshim Shin Ramyun","./images/nongshim-shin-ramyun.jpg","Beef, wheat noodles, sesame seeds, chili pepper, chives, green onion, shimeji mushrooms, bean sprout kimchi, cabbage kimchi, raw egg yolk, spicy powder, sugar, miso paste"),new n,new n,new n];const a=function(){const e=document.getElementById("main");e.textContent="",e.appendChild(function(){const e=Object.assign(document.createElement("div"),{classList:"menu-grid"});return s.forEach((t=>e.appendChild(function(e){const t=Object.assign(document.createElement("div"),{classList:"menu-card"}),n=Object.assign(document.createElement("div"),{classList:"card-title",textContent:`${e.name}`}),s=Object.assign(document.createElement("img"),{classList:"card-img",src:`${e.image}`,alt:`${e.name} image`}),a=Object.assign(document.createElement("p"),{classList:"card-ingredients",textContent:`${e.ingredients}`});return t.append(n,s,a),t}(t)))),e}())},c=function(){const t=document.getElementById("main");t.textContent="",t.appendChild(function(){const t=document.createElement("div");t.classList.add("contact"),t.append(e("Phone:  (123) 456-7890"),e("Email:  info@cozyramen.com"),e("Address:  8080 Easy St. Cincinnati, OH"),e("Hours:  Mon-Fri: 10am-10pm"),e("Sat-Sun:  11am - 8pm"));const n=Object.assign(document.createElement("iframe"),{classList:"gMap",src:"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d12384.141237002917!2d-84.51493846865763!3d39.10566627206874!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1680724651683!5m2!1sen!2sus",width:"600",height:"450",style:"border:0;",allowfullscreen:"",loading:"lazy",referrerpolicy:"no-referrer-when-downgrade"});return t.appendChild(n),t}())};function i(e){const t=e.charAt(0).toUpperCase()+e.slice(1),n=Object.assign(document.createElement("button"),{classList:`btn tab ${e.toLowerCase()}-tab`,textContent:t,onclick:t=>{console.log("clicked"),t.target.classList.contains("active")||(o(n),m(e))}});return n}function o(e){document.querySelectorAll(".tab").forEach((t=>{t!==e&&t.classList.remove("active")})),e.classList.add("active")}function m(e="home"){switch(e){case"home":t();break;case"menu":a();break;case"contact":c();break;default:console.log("Default switch triggered: loadHomeTab()"),t()}}!function(){const e=document.getElementById("content");e.appendChild(function(){const e=Object.assign(document.createElement("header"),{id:"header",classList:"header"}),t=Object.assign(document.createElement("h1"),{classList:"restaurant-name",textContent:"Cozy Ramen"});return e.appendChild(t),e.appendChild(function(){const e=document.createElement("nav"),t=i("home"),n=i("menu"),s=i("contact");return e.appendChild(t),e.appendChild(n),e.appendChild(s),e}()),e}()),e.appendChild(Object.assign(document.createElement("main"),{id:"main",classList:"main"})),e.appendChild(function(){const e=Object.assign(document.createElement("footer"),{id:"footer",classList:"footer"}),t=document.createElement("p");t.textContent=`Copyright Â© ${(new Date).getFullYear()} jakemcco`;const n=document.createElement("a");n.href="https://github.com/jakemcco";const s=document.createElement("i");return s.classList.add("fab"),s.classList.add("fa-github"),n.appendChild(s),e.appendChild(t),e.appendChild(n),e}());const t="home",n=document.getElementsByClassName(`${t}-tab`)[0];m(t),o(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,